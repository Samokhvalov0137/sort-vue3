{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"app\"\n}, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_select = _resolveComponent(\"v-select\");\n\n  const _component_v_table = _resolveComponent(\"v-table\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createVNode(_component_v_select, {\n    options: _ctx.categories,\n    onSelect: $options.optionSelect,\n    selected: _ctx.selected\n  }, null, 8\n  /* PROPS */\n  , [\"options\", \"onSelect\", \"selected\"]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.searchData = $event),\n    type: \"text\",\n    placeholder: \"Поиск продуктов\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.searchData]]), _createVNode(_component_v_table, {\n    users_data: $options.filteredProduct\n  }, null, 8\n  /* PROPS */\n  , [\"users_data\"])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCACAA,oBACM,KADN,EACM;EADDC,EAAE,EAAC;AACF,CADN,EAAa,IAAb,EAAa;AAAA;AAAb;;;;;;;6DAAAC,YAEEC,aAIEC,mBAJF,EAIE;IAHDC,OAAO,EAAEC,eAGR;IAFDC,QAAM,EAAEC,qBAEP;IADDC,QAAQ,EAAEH;EACT,CAJF;;EAAA,wDAKAN,oBAAsE,OAAtE,EAAsE;+DAAtDM,kBAAUI,OAA4C;IAA1CC,IAAI,EAAC,MAAqC;IAA9BC,WAAW,EAAC;EAAkB,CAAtE;;EAAA,kBAAgBN,oBAChBH,aAEEU,kBAFF,EAEE;IADCC,UAAU,EAAEN;EACb,CAFF,EAC8B,IAD9B,EAC8B;EAAA;EAD9B,EAC8B,cAD9B","names":["_createElementVNode","id","_hoisted_1","_createVNode","_component_v_select","options","_ctx","onSelect","$options","selected","$event","type","placeholder","_component_v_table","users_data"],"sourceRoot":"","sources":["/Users/vlad_samokhvalov/sites/sort-vue/src/App.vue"],"sourcesContent":["<template>\n<div id=\"app\">\n</div>\n  <v-select\n  :options=\"categories\"\n  @select=\"optionSelect\"\n  :selected=\"selected\"\n  />\n  <input v-model=\"searchData\" type=\"text\" placeholder=\"Поиск продуктов\">\n  <v-table\n    :users_data=\"filteredProduct\"\n  />\n</template>\n\n<script>\n\nimport {mapActions, mapGetters} from 'vuex'\nimport vTable from './components/table/v-table'\nimport vSelect from './components/v-select'\n\nexport default {\n  name: 'app',\n  components: {\n    vTable,\n    vSelect\n  },\n\n  data: () => {\n    return{\n      categories: [\n        {name: 'Фрукты', value: 1},\n        {name: 'Овощи', value: 2},\n        {name: 'Все продукты', value: 3}\n      ],\n      selected: \"Выбрать категории:\",\n      sortedData: [],\n      searchData: ''\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'USERS'\n    ]),\n    filteredData(){\n      if(this.sortedData.length){\n        return this.sortedData\n      } else {\n       return this.USERS\n      }\n    },\n    filteredProduct(){\n      return this.USERS.filter(product => {\n        return product.indexOf(this.searchData) !== -1\n      })\n    }\n  },\n  methods: {\n    optionSelect(category){\n      this.sortedData = [];\n      let vm = this;\n      this.USERS.map(function (item) {\n        if (item.category === category.name){\n          vm.sortedData.push(item);\n        }\n      }),\n      this.selected = category.name\n    },\n    ...mapActions([\n      'GET_USERS_FROM_API'\n    ])\n  },\n\n  mounted(){\n    this.GET_USERS_FROM_API()\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module"}